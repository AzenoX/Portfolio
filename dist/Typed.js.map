{"version":3,"sources":["../js/Typed.js"],"names":["Typed","options","span","document","interval","setInterval","el","str","style","delay","letters","counter","reject","element","key","value","Object","resolve","clearInterval","JSON","setTimeout","length","instruction","action","values","console","val","callback"],"mappings":"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","sourcesContent":["class Typed{\r\n\r\n    _timeline;\r\n\r\n    _blink;\r\n    _printErrors;\r\n    _blinkClasses;\r\n    _blinkSpeed;\r\n\r\n    _isWriting;\r\n\r\n    constructor(el, options = {}) {\r\n        this.el = el;\r\n        this._timeline = [];\r\n\r\n\r\n        //Blink - default: true\r\n        this._blink = ('blink' in options) ? options.blink : true;\r\n\r\n        //Print Errors - default: false\r\n        this._printErrors = ('printErrors' in options) ? options.printErrors : false;\r\n\r\n        //Blink Classes - default: []\r\n        this._blinkClasses = ('blinkClasses' in options) ? options.blinkClasses : [];\r\n\r\n        //Blink Speed - default: 600\r\n        this._blinkSpeed = ('blinkSpeed' in options) ? options.blinkSpeed : 600;\r\n\r\n\r\n        this._isWriting = false;\r\n\r\n        this.el.innerText = \"\";\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    __startBlink(){\r\n        let span = document.createElement(\"span\");\r\n        for (const cl in this._blinkClasses){\r\n            if(this._blinkClasses.hasOwnProperty(cl)){\r\n                span.classList.add(this._blinkClasses[cl]);\r\n            }\r\n        }\r\n        span.innerText = '|';\r\n        this.el.appendChild(span);\r\n\r\n        let interval = setInterval(() => {\r\n            if(this._isWriting === true){\r\n                span.style.opacity = \"1\";\r\n            }\r\n            else{\r\n                span.style.opacity = (span.style.opacity === \"0\") ? \"1\" : \"0\";\r\n            }\r\n        }, this._blinkSpeed);\r\n    }\r\n\r\n    /*\r\n    * str: \"Ceci est un texte\"\r\n    * style: {color: \"red\",fontWeight:bold}\r\n    * */\r\n\r\n    __type(el, str, style = {}, delay){\r\n        return new Promise((resolve, reject) => {\r\n            let letters = str.split('');\r\n            let counter = 0;\r\n\r\n            if(delay < 0){\r\n                reject(\"The delay cannot be negative\");\r\n                return;\r\n            }\r\n\r\n            let interval = setInterval(() => {\r\n                this._isWriting = true;\r\n                let element = document.createElement(\"span\");\r\n\r\n                //Apply styles\r\n                for (const [key, value] of Object.entries(style)){\r\n                    if(style.hasOwnProperty(key)){\r\n                        element.style[key] = value;\r\n                    }\r\n                }\r\n\r\n                //Append SPAN to element\r\n                element.innerText = letters[counter];\r\n                el.appendChild(element);\r\n\r\n                //Increment and check the end\r\n                counter++;\r\n                if(counter >= letters.length){\r\n                    this._isWriting = false;\r\n                    resolve();\r\n                    clearInterval(interval);\r\n                }\r\n            },delay);\r\n        })\r\n\r\n    }\r\n    type(str, style = {}, delay = 100){\r\n        this._timeline.push(\"w^\" + str + \"///\" + JSON.stringify(style) + \"///\" + delay);\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n    * delay: Integer (milliseconds)\r\n    * */\r\n    __pause(delay){\r\n        return new Promise(resolve => setTimeout(resolve, delay));\r\n    }\r\n    pause(delay){\r\n        this._timeline.push(\"p^\" + delay);\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n    * length: Integer\r\n    * delay: Integer (milliseconds)\r\n    * */\r\n    __delete(el, length, delay){\r\n        return new Promise((resolve) => {\r\n            let counter = 0;\r\n            let interval = setInterval(() => {\r\n                this._isWriting = true;\r\n\r\n                //Remove last char\r\n                el.removeChild(el.lastChild);\r\n\r\n                //Increment and check the end of the loop\r\n                counter++;\r\n                if(counter > length){\r\n                    this._isWriting = false;\r\n                    resolve();\r\n                    clearInterval(interval);\r\n                }\r\n            }, delay);\r\n        })\r\n    }\r\n    delete(length, delay = 100){\r\n        this._timeline.push(\"d^\" + length + \"/\" + delay);\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n\r\n    _start(){\r\n        return new Promise((resolve) => {\r\n            setTimeout(async () => {\r\n                let span = document.createElement(\"span\");\r\n                this.el.appendChild(span);\r\n\r\n                if(this._blink){\r\n                    this.__startBlink();\r\n                }\r\n\r\n                for (const instruction in this._timeline){\r\n                    if(this._timeline.hasOwnProperty(instruction)){\r\n                        const action = this._timeline[instruction].split('^')[0];\r\n                        const value = this._timeline[instruction].split('^')[1];\r\n\r\n                        //Write\r\n                        if(action === \"w\"){\r\n                            const values = value.split('///');\r\n                            const str = values[0];\r\n                            const style = JSON.parse(values[1]);\r\n                            const delay = values[2];\r\n\r\n                            try{\r\n                                await this.__type(span, str, style, delay);\r\n                            }\r\n                            catch(e){\r\n                                (this._printErrors) ? console.log(e) : '';\r\n                                throw e;\r\n                            }\r\n                        }\r\n\r\n                        //Pause\r\n                        else if(action === \"p\"){\r\n                            await this.__pause(value);\r\n                        }\r\n\r\n                        //Delete\r\n                        else if(action === \"d\"){\r\n                            const values = value.split('/');\r\n                            const val = values[0];\r\n                            const delay = values[1];\r\n\r\n                            await this.__delete(span, val, delay);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                resolve();\r\n            }, 1)\r\n        })\r\n    }\r\n\r\n    run(callback){\r\n        if(callback != null){\r\n            this._start().then(() => callback());\r\n        }\r\n        else{\r\n            this._start();\r\n        }\r\n    }\r\n\r\n}"],"file":"Typed.js"}