{"version":3,"sources":["../js/globalFunctions.js"],"names":["delay","typeSpeed","element","document","type","blink","printErrors","blinkClasses","blinkClass","min","max","Math"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AACA,SAAA,aAAA,CAAA,EAAA,EAAA,IAAA,EAA+D;AAAA,MAA9BA,KAA8B,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAtB,IAAsB;AAAA,MAAhBC,SAAgB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,GAAI;AAC3D,MAAIC,OAAO,GAAGC,QAAQ,CAARA,cAAAA,CAAd,EAAcA,CAAd;AACA,MAAIC,IAAI,GAAG,IAAA,KAAA,CAAA,OAAA,EAAmB;AAC1BC,IAAAA,KAAK,EADqB,IAAA;AAE1BC,IAAAA,WAAW,EAFe,KAAA;AAG1BC,IAAAA,YAAY,EAAE,CAAA,SAAA;AAHY,GAAnB,EAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAX,GAAW,EAAX;AAQH;;AAED,SAAA,kBAAA,CAAA,OAAA,EAAA,IAAA,EAAiG;AAAA,MAAtDP,KAAsD,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA9C,IAA8C;AAAA,MAAxCC,SAAwC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA5B,GAA4B;AAAA,MAAvBO,UAAuB,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAV,SAAU;AAC7F,MAAIJ,IAAI,GAAG,IAAA,KAAA,CAAA,OAAA,EAAmB;AAC1BC,IAAAA,KAAK,EADqB,IAAA;AAE1BC,IAAAA,WAAW,EAFe,KAAA;AAG1BC,IAAAA,YAAY,EAAE,CAAA,UAAA;AAHY,GAAnB,EAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,SAAA,EAAX,GAAW,EAAX;AAQH;;AAGD,SAAA,SAAA,GAAgC;AAAA,MAAbE,GAAa,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAP,CAAO;AAAA,MAAJC,GAAI,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAA,SAAA;AAC5B,SAAOC,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,MAAAA,MAAiBD,GAAG,GAAHA,GAAAA,GAA5BC,CAAWA,CAAXA,IAAP,GAAA;AACH","sourcesContent":["/*============================\r\n\r\n    Function - Write Typing\r\n\r\n============================*/\r\nfunction writeIntoText(el, text, delay = 1000, typeSpeed = 100){\r\n    let element = document.getElementById(el);\r\n    let type = new Typed(element, {\r\n        blink: true,\r\n        printErrors: false,\r\n        blinkClasses: [\"blinker\"]\r\n    })\r\n        .pause(delay)\r\n        .type(text, {}, typeSpeed)\r\n        .run();\r\n}\r\n\r\nfunction writeIntoText_HTML(element, text, delay = 1000, typeSpeed = 100, blinkClass = \"blinker\"){\r\n    let type = new Typed(element, {\r\n        blink: true,\r\n        printErrors: false,\r\n        blinkClasses: [blinkClass]\r\n    })\r\n        .pause(delay)\r\n        .type(text, {}, typeSpeed)\r\n        .run();\r\n}\r\n\r\n\r\nfunction getRandom(min = 0, max){\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n"],"file":"globalFunctions.js"}